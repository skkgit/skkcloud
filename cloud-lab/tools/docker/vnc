#!/bin/sh
#
# vnc -- open the docker lab's novnc frontend via a browser
#

TOP_DIR=$(cd $(dirname $0)/../../ && pwd)
. $TOP_DIR/tools/docker/config $* >/dev/null

# Get web browser
get_browser

# Get xterm
get_xterm

# Check status
docker ps -f name=$CONTAINER_NAME | grep -qv PORTS
[ $? -ne 0 ] && echo "LOG: $LAB_NAME is not running." && exit 1

[ -z "$VNC_AUTOCONNECT" ] && VNC_AUTOCONNECT=1

# Get vnc page
CONTAINER_WEB_URL="$WEB_HTTP://localhost:${HOST_VNC_PORT}/?u=$VNC_TOKEN&p=$VNC_PWD"
HOST_WEB_URL="$WEB_HTTP://${HOST}:${HOST_VNC_PORT}/?u=$VNC_TOKEN&p=$VNC_PWD"
HOST_WEB_URL_VIEWONLY="$WEB_HTTP://${HOST}:${HOST_VNC_PORT}/?r=${VNC_TOKEN}${VNC_PWD_VIEWONLY}"
LABS_WEB_URL="$WEB_HTTP://localhost:${HOST_VNC_PORT}/labs/$RELEASE_HTML"

[ $VNC_AUTOCONNECT -eq 1 ] && \
  CONTAINER_WEB_URL="$CONTAINER_WEB_URL&autoconnect=1"

# Create local shotcut on Desktop
if [ -d ~/Desktop -a -n "$REMOTE_DESKTOP_SHORTCUT" -a -f "$REMOTE_DESKTOP_SHORTCUT" ]; then

  if [ "x$HOST_OS" = "xDarwin" ]; then

    if [ "x$LAB_DESKTOP_SHORTCUT" = "x1" ]; then
      echo "$DOCKER_RUN_CMD $LAB_NAME" > $LOCAL_DESKTOP_SHORTCUT

      # ref: https://superuser.com/questions/479411/close-all-mac-terminal-windows-but-the-one-running-a-script
      echo 'osascript -e "do shell script \"osascript -e \\\\\"tell application \\\\\\\\\\\\\\"Terminal\\\\\\\\\\\\\\" \\\\\\" -e \\\\\\"set mainID to id of front window\\\\\\" -e \\\\\\" close (every window whose id = mainID)\\\\\\"  -e \\\\\\"end tell\\\\\\"   &> /dev/null &\""; exit' >> $LOCAL_DESKTOP_SHORTCUT
    fi

    # For cloud lab
    echo "/usr/bin/open -a 'Terminal' '"$CLOUD_LAB_TOP_DIR"'" > $MANAGE_DESKTOP_SHORTCUT
    echo 'osascript -e "do shell script \"osascript -e \\\\\"tell application \\\\\\\\\\\\\\"Terminal\\\\\\\\\\\\\\" \\\\\\" -e \\\\\\"set mainID to id of second window\\\\\\" -e \\\\\\" close (every window whose id = mainID)\\\\\\"  -e \\\\\\"end tell\\\\\\"   &> /dev/null &\""; exit' >> $MANAGE_DESKTOP_SHORTCUT

    echo "/usr/bin/open -a '"$WEB_BROWSER"' '"$LABS_WEB_URL"'" > $BROWSE_DESKTOP_SHORTCUT
    echo 'osascript -e "do shell script \"osascript -e \\\\\"tell application \\\\\\\\\\\\\\"Terminal\\\\\\\\\\\\\\" \\\\\\" -e \\\\\\"set mainID to id of first window\\\\\\" -e \\\\\\" close (every window whose id = mainID)\\\\\\"  -e \\\\\\"end tell\\\\\\"   &> /dev/null &\""; exit' >> $BROWSE_DESKTOP_SHORTCUT


  else

    if [ "x$LAB_DESKTOP_SHORTCUT" = "x1" ]; then
      echo '#!/usr/bin/env xdg-open' > $LOCAL_DESKTOP_SHORTCUT
      TMP_URL=`echo $CONTAINER_WEB_URL | tr '&' '|'`
      cat $REMOTE_DESKTOP_SHORTCUT \
        | sed "s%Exec=.*%Exec=$DOCKER_RUN_CMD $LAB_NAME%g" \
        | sed "s%terminator.png%${WEB_BROWSER}.png%g;s%lxterminal.xpm%${WEB_BROWSER}.png%g" | tr '|' '&' \
	  >> $LOCAL_DESKTOP_SHORTCUT
    fi

    # For cloud lab
    cat <<EOF > $MANAGE_DESKTOP_SHORTCUT
#!/usr/bin/env xdg-open
[Desktop Entry]
Encoding=UTF-8
Name=Cloud Lab Manager
Comment=Cloud Lab Manage Center
Exec=$XTERM --working-directory=$CLOUD_LAB_TOP_DIR -T 'Cloud Lab'
Icon=/usr/share/pixmaps/${XTERM}.png
Type=Application
EOF

    cat <<EOF > $BROWSE_DESKTOP_SHORTCUT
#!/usr/bin/env xdg-open
[Desktop Entry]
Encoding=UTF-8
Name=Cloud Lab Browser
Comment=Cloud Lab Web Center
Exec=$WEB_BROWSER $LABS_WEB_URL
Icon=/usr/share/pixmaps/${WEB_BROWSER}.png
Type=Application
EOF
  fi

  [ -f $LOCAL_DESKTOP_SHORTCUT ] && chmod a+x $LOCAL_DESKTOP_SHORTCUT
  chmod a+x $MANAGE_DESKTOP_SHORTCUT
  chmod a+x $BROWSE_DESKTOP_SHORTCUT
fi

# For web portmapping
[ -f $LAB_PORTMAP ] && grep -q ":8" $LAB_PORTMAP \
    && (docker logs $CONTAINER_ID 2>/dev/null | grep "Server address:") \
    && for port in $(grep ":8" $LAB_PORTMAP | cut -d':' -f1); \
       do echo "LOG: Local Web Address: http://$HOST:$port/"; done

(eval $__WEB_BROWSER '$CONTAINER_WEB_URL' >/dev/null 2>&1 &)>/dev/null 2>&1

echo "Please login with:"
echo
echo "        User: $VNC_TOKEN"
echo "    Password: $VNC_PWD (Normal)"
echo "    Password: $VNC_PWD_VIEWONLY (View)"
echo
echo "Local URL:"
echo
echo "  * Normal: $HOST_WEB_URL"
echo "  *   View: $HOST_WEB_URL_VIEWONLY"
echo

if [ -n "$LOCALHOST" ]; then
    # Get external access address
    _HOST_WEB_URL=$(echo $HOST_WEB_URL | sed -e "s%localhost%$LOCALHOST%g")
    _HOST_WEB_URL_VIEWONLY=$(echo $HOST_WEB_URL_VIEWONLY | sed -e "s%localhost%$LOCALHOST%g")

    echo "Remote URL:"
    echo
    echo "  * Normal: $_HOST_WEB_URL"
    echo "  *   View: $_HOST_WEB_URL_VIEWONLY"
    echo
else
    echo "Note: Please ensure network available outside and then replace 'localhost' with the external ip or domain name."
    echo "      E.g. Virtualbox setting 'Network->Adapter2->Host-only Adapter' adds eth1. 'ifconfig eth1' give us the ip."
    echo "      Then 'echo \$ip > .host_name' or 'echo \$domain_name > .host_name'"
fi

echo
echo "Note: both firefox and safari work, but google chrome web browser is preferable."
echo
